// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace Oanda.Rest.Models
{
    public partial class GetAccountOKResponse
    {
        private string _accountCurrency;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string AccountCurrency
        {
            get { return this._accountCurrency; }
            set { this._accountCurrency = value; }
        }
        
        private double? _accountId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? AccountId
        {
            get { return this._accountId; }
            set { this._accountId = value; }
        }
        
        private string _accountName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string AccountName
        {
            get { return this._accountName; }
            set { this._accountName = value; }
        }
        
        private double? _balance;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? Balance
        {
            get { return this._balance; }
            set { this._balance = value; }
        }
        
        private double? _marginAvail;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? MarginAvail
        {
            get { return this._marginAvail; }
            set { this._marginAvail = value; }
        }
        
        private double? _marginRate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? MarginRate
        {
            get { return this._marginRate; }
            set { this._marginRate = value; }
        }
        
        private double? _marginUsed;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? MarginUsed
        {
            get { return this._marginUsed; }
            set { this._marginUsed = value; }
        }
        
        private double? _openOrders;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? OpenOrders
        {
            get { return this._openOrders; }
            set { this._openOrders = value; }
        }
        
        private double? _openTrades;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? OpenTrades
        {
            get { return this._openTrades; }
            set { this._openTrades = value; }
        }
        
        private double? _realizedPl;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? RealizedPl
        {
            get { return this._realizedPl; }
            set { this._realizedPl = value; }
        }
        
        private double? _unrealizedPl;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? UnrealizedPl
        {
            get { return this._unrealizedPl; }
            set { this._unrealizedPl = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the GetAccountOKResponse class.
        /// </summary>
        public GetAccountOKResponse()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken accountCurrencyValue = inputObject["accountCurrency"];
                if (accountCurrencyValue != null && accountCurrencyValue.Type != JTokenType.Null)
                {
                    this.AccountCurrency = ((string)accountCurrencyValue);
                }
                JToken accountIdValue = inputObject["accountId"];
                if (accountIdValue != null && accountIdValue.Type != JTokenType.Null)
                {
                    this.AccountId = ((double)accountIdValue);
                }
                JToken accountNameValue = inputObject["accountName"];
                if (accountNameValue != null && accountNameValue.Type != JTokenType.Null)
                {
                    this.AccountName = ((string)accountNameValue);
                }
                JToken balanceValue = inputObject["balance"];
                if (balanceValue != null && balanceValue.Type != JTokenType.Null)
                {
                    this.Balance = ((double)balanceValue);
                }
                JToken marginAvailValue = inputObject["marginAvail"];
                if (marginAvailValue != null && marginAvailValue.Type != JTokenType.Null)
                {
                    this.MarginAvail = ((double)marginAvailValue);
                }
                JToken marginRateValue = inputObject["marginRate"];
                if (marginRateValue != null && marginRateValue.Type != JTokenType.Null)
                {
                    this.MarginRate = ((double)marginRateValue);
                }
                JToken marginUsedValue = inputObject["marginUsed"];
                if (marginUsedValue != null && marginUsedValue.Type != JTokenType.Null)
                {
                    this.MarginUsed = ((double)marginUsedValue);
                }
                JToken openOrdersValue = inputObject["openOrders"];
                if (openOrdersValue != null && openOrdersValue.Type != JTokenType.Null)
                {
                    this.OpenOrders = ((double)openOrdersValue);
                }
                JToken openTradesValue = inputObject["openTrades"];
                if (openTradesValue != null && openTradesValue.Type != JTokenType.Null)
                {
                    this.OpenTrades = ((double)openTradesValue);
                }
                JToken realizedPlValue = inputObject["realizedPl"];
                if (realizedPlValue != null && realizedPlValue.Type != JTokenType.Null)
                {
                    this.RealizedPl = ((double)realizedPlValue);
                }
                JToken unrealizedPlValue = inputObject["unrealizedPl"];
                if (unrealizedPlValue != null && unrealizedPlValue.Type != JTokenType.Null)
                {
                    this.UnrealizedPl = ((double)unrealizedPlValue);
                }
            }
        }
    }
}
