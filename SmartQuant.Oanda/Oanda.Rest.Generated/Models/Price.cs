// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace Oanda.Rest.Models
{
    public partial class Price
    {
        private double? _ask;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? Ask
        {
            get { return this._ask; }
            set { this._ask = value; }
        }
        
        private double? _bid;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? Bid
        {
            get { return this._bid; }
            set { this._bid = value; }
        }
        
        private string _instrument;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Instrument
        {
            get { return this._instrument; }
            set { this._instrument = value; }
        }
        
        private string _status;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Status
        {
            get { return this._status; }
            set { this._status = value; }
        }
        
        private string _time;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Time
        {
            get { return this._time; }
            set { this._time = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Price class.
        /// </summary>
        public Price()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken askValue = inputObject["ask"];
                if (askValue != null && askValue.Type != JTokenType.Null)
                {
                    this.Ask = ((double)askValue);
                }
                JToken bidValue = inputObject["bid"];
                if (bidValue != null && bidValue.Type != JTokenType.Null)
                {
                    this.Bid = ((double)bidValue);
                }
                JToken instrumentValue = inputObject["instrument"];
                if (instrumentValue != null && instrumentValue.Type != JTokenType.Null)
                {
                    this.Instrument = ((string)instrumentValue);
                }
                JToken statusValue = inputObject["status"];
                if (statusValue != null && statusValue.Type != JTokenType.Null)
                {
                    this.Status = ((string)statusValue);
                }
                JToken timeValue = inputObject["time"];
                if (timeValue != null && timeValue.Type != JTokenType.Null)
                {
                    this.Time = ((string)timeValue);
                }
            }
        }
    }
}
