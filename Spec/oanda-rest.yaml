swagger: '2.0'
info:
  version: "0.0.1"
  title: Oanda Rest API (Practice)
host: api-fxpractice.oanda.com
schemes:
  - https
basePath: /v1
produces:
  - application/json
paths:
  /accounts:
    get:
      parameters:
        - name: username
          in: query
          type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              accounts:
                type: array
                items:
                  $ref: '#/definitions/Account'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    post:
      parameters:
        - name: currency
          in: query
          type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              username:
                type: string
              password:
                type: string
              accountId:
                type: string
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'

  /accounts/{account_id}:
    get:
      parameters:
        - in: path
          name: account_id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            properties:
              accountId:
                type: number
                format: int32
              accountName:
                type: string
              balance:
                type: number
                format: double
              unrealizedPl:
                type: number
                format: double
              realizedPl:
                type: number
                format: double
              marginUsed:
                type: number
                format: double
              marginAvail:
                type: number
                format: int64
              openTrades:
                type: number
                format: int64  
              openOrders:
                type: number
                format: int64                
              marginRate:
                type: number
                format: double              
              accountCurrency:
                type: string
  # Get an instrument list
  /instruments:
    get:
      parameters:
        - name: accountId
          in: query
          type: string
          required: true
        - name: fields
          in: query
          type: string
        - name: instruments
          in: query
          type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              instruments:
                type: array
                items:
                  $ref: '#/definitions/Instrument'  
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  # Get current prices
  /prices:
    get:
      parameters:
        - name: instruments
          in: query
          type: string
          required: true
        - name: since
          in: query
          type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              prices:
                type: array
                items:
                  $ref: '#/definitions/Price'            
  # Retrieve instrument history
  /candles:
    get:
      responses:
        200:
          description: OK
          schema:
            properties:
              candles:
                type: array
                items:
                  $ref: '#/definitions/Candle'
      parameters:
        - name: instrument
          in: query        
          type: string
          required: true
        - name: granularity
          in: query
          type: string
        - name: count
          in: query
          type: string
        - name: start
          in: query
          type: string
        - name: candleFormat
          in: query
          type: string
        - name: includeFirst
          in: query
          type: string
        - name: dailyAlignment
          in: query
          type: string
        - name: alignmentTimezone
          in: query
          type: string
        - name: weeklyAlignment
          in: query
          type: string        
  # Get orders for an account
  /accounts/{account_id}/orders:
    get:
      parameters:
        - in: path
          name: account_id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
  # Create a new order      
  /accounts/{account_id}/orders:
    post:
      parameters:
        - in: path
          name: account_id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          
  # Get information for an order
  /accounts/{account_id}/orders/{order_id}:
    get:
      parameters:
        - in: path
          name: account_id
          required: true
          type: integer
          format: int64
        - in: path
          name: order_id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK

  # Modify an existing order
  /accounts/{account_id}/orders/{order_id}:
    patch:
      parameters:
        - in: path
          name: account_id
          required: true
          type: integer
          format: int64
        - in: path
          name: order_id
          required: true
          type: integer
          format: int64

  # Close an order
  /accounts/{account_id}/orders/{order_id}:
    delete:
      parameters:
        - in: path
          name: account_id
          required: true
          type: integer
          format: int64
        - in: path
          name: order_id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK          
  # Get a list of open trades
  # Get information on a specific trade
  # Modify an existing trade
  # Close an open trade
  # Get a list of all open positions
  # Get the position for an instrument
  # Close an existing position
  # Get transaction history
  # Get information for a transaction
  # Get full account history
security:
  - oandaAccessToken: []
securityDefinitions:
  oandaAccessToken:
    type: oauth2
    flow: implicit
    authorizationUrl: /oauth2/authorize
definitions:
  Error:
    properties:
      code:
        type: integer
      message:
        type: string
      moreInfo:
        type: string
  Account:
    properties:
      accountId:
        type: integer
      accountName:
        type: string
      accountCurrency:
        type: string
      marginRate:
        type: number
  Instrument:
    properties:
      instrument:
        type: string
      displayName:
        type: string
      pip:
        type: number
      maxTradeUnits:
        type: number
  Price:
    properties:
      instrument:
        type: string  
      time:
        type: string  
      bid:
        type: number
      ask:
        type: number
      status:
        type: string
  Candle:
    properties:
      time:
        type: string